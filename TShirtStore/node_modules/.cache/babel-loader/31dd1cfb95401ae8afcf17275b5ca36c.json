{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Seneme\\\\Pictures\\\\store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\Seneme\\\\Pictures\\\\store\\\\src\\\\Context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nimport Cart from './components/Cart/Cart';\nconst ProductContext = React.createContext(); //Provider\n//Consumer\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      product: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubtotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProduct = [];\n      storeProducts.forEach(item => {\n        const singleItem = _objectSpread({}, item);\n\n        tempProduct = [...tempProduct, singleItem];\n      });\n      this.setState(() => {\n        return {\n          product: tempProduct\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.product.find(item => item.id === id); //later to change \n\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempCartProduct = [...this.state.product];\n      const index = tempCartProduct.indexOf(this.getItem(id));\n      const cartProduct = tempCartProduct[index];\n      cartProduct.inCart = true;\n      cartProduct.count = 1;\n      const price = cartProduct.price;\n      cartProduct.total = price;\n      this.setState(() => {\n        return {\n          product: tempCartProduct,\n          cart: [...this.state.cart, cartProduct]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tCart = [...this.state.cart];\n      const selectedProduct = tCart.find(item => item.id === id);\n      const index = tCart.indexOf(selectedProduct);\n      const prod = tCart[index];\n      prod.count = prod.count + 1;\n      prod.total = prod.count * prod.price;\n      this.setState(() => {\n        return {\n          cart: [...tCart]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.decrement = id => {\n      console.log(\"decrease method\");\n    };\n\n    this.removeItem = id => {\n      let tempProd = [...this.state.product];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProd.indexOf(this.getItem(id));\n      let removedProd = tempProd[index];\n      removedProd.inCart = false;\n      removedProd.count = 0;\n      removedProd.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          product: [...tempProd]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let subtotal = 0;\n      this.state.cart.map(item => subtotal += item.total);\n      const tempTax = subtotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subtotal + tax;\n      this.setState(() => {\n        return {\n          cartSubtotal: subtotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  } //setting product to retrieve  products in arry\n\n\n  //Seneme Potential methods\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["C:\\Users\\Seneme\\Pictures\\store\\src\\Context.js"],"names":["React","Component","storeProducts","detailProduct","Cart","ProductContext","createContext","ProductProvider","state","product","cart","modalOpen","modalProduct","cartSubtotal","cartTax","cartTotal","setProducts","tempProduct","forEach","item","singleItem","setState","getItem","id","find","handleDetail","addToCart","tempCartProduct","index","indexOf","cartProduct","inCart","count","price","total","addTotals","openModal","closeModal","increment","tCart","selectedProduct","prod","decrement","console","log","removeItem","tempProd","tempCart","filter","removedProd","clearCart","subtotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {storeProducts,detailProduct} from './data';\r\nimport Cart from './components/Cart/Cart';\r\n\r\nconst ProductContext = React.createContext();\r\n//Provider\r\n//Consumer\r\n class ProductProvider extends Component{\r\n     state = {\r\n         product: [],\r\n         detailProduct: detailProduct,\r\n         cart:[],\r\n         modalOpen:false,\r\n         modalProduct:detailProduct,\r\n         cartSubtotal:0,\r\n         cartTax:0,\r\n         cartTotal:0,\r\n     };\r\n     componentDidMount(){\r\n         this.setProducts();\r\n     }\r\n     //setting product to retrieve  products in arry\r\n     setProducts = () =>{\r\n        let tempProduct = [];\r\n        storeProducts.forEach(item =>{\r\n            const singleItem = {...item};\r\n            tempProduct = [...tempProduct,singleItem];\r\n        })\r\n        this.setState(() =>{\r\n             return {product : tempProduct}\r\n        });\r\n     };\r\n     getItem = id =>{\r\n         const product = this.state.product.find(item => item.id === id);//later to change \r\n         return product;\r\n     }\r\n     //Handling of Details\r\n     handleDetail = id =>{\r\n        const product = this.getItem(id);\r\n        this.setState(()=>{ \r\n            return {detailProduct:product }\r\n        })\r\n     };\r\n     //Handling of Cart\r\n     addToCart = (id) =>{\r\n        let tempCartProduct = [...this.state.product];\r\n        const index = tempCartProduct.indexOf(this.getItem(id));\r\n        const cartProduct = tempCartProduct[index];\r\n        cartProduct.inCart = true;\r\n        cartProduct.count = 1;\r\n        const price = cartProduct.price;\r\n        cartProduct.total = price;\r\n        this.setState(()=>{\r\n            return {product:tempCartProduct , cart:[...this.state.cart , cartProduct]}\r\n        } ,()=>{\r\n            this.addTotals();\r\n        });\r\n    };\r\n    //methods for Popp up window Product info Modal\r\n    openModal = id =>{\r\n        const product = this.getItem(id);\r\n        this.setState(()=>{\r\n            return {modalProduct:product,modalOpen:true};\r\n        });\r\n    };\r\n    closeModal = () =>{\r\n        this.setState(()=>{\r\n            return {modalOpen:false};\r\n        });\r\n    };\r\n    //within cart processes\r\n    increment = (id) =>{\r\n        let tCart = [...this.state.cart];\r\n        const selectedProduct = tCart.find(item=>item.id === id);\r\n        const index = tCart.indexOf(selectedProduct);\r\n        const prod = tCart[index];\r\n\r\n        prod.count = prod.count + 1;\r\n        prod.total = prod.count * prod.price;\r\n\r\n        this.setState(()=>{\r\n            return{cart:[...tCart]} \r\n        },()=>{\r\n            this.addTotals();\r\n        });\r\n\r\n    }\r\n    decrement = (id) =>{\r\n        console.log(\"decrease method\");\r\n    }\r\n    removeItem = (id) =>{\r\n        let tempProd = [...this.state.product];\r\n        let tempCart = [...this.state.cart];\r\n\r\n        tempCart = tempCart.filter(item => item.id !== id);\r\n\r\n        const index = tempProd.indexOf(this.getItem(id)); \r\n        let removedProd = tempProd[index];\r\n        removedProd.inCart = false;\r\n        removedProd.count = 0;\r\n        removedProd.total = 0;\r\n\r\n        this.setState(()=>{\r\n            return {\r\n                cart:[...tempCart],\r\n                product:[...tempProd]\r\n            }\r\n        },()=>{\r\n            this.addTotals();\r\n        })\r\n    }\r\n    clearCart = () =>{\r\n        this.setState(()=>{\r\n            return {cart:[]}\r\n        },()=>{\r\n            this.setProducts();\r\n            this.addTotals();\r\n        });\r\n    }\r\n    //methods to add totals / subtotals tax tec\r\n    addTotals = () => {\r\n        let subtotal = 0;\r\n        this.state.cart.map(item=>(subtotal += item.total));\r\n        const tempTax = subtotal * 0.1;\r\n        const tax = parseFloat(tempTax.toFixed(2));\r\n        const total = subtotal + tax; \r\n        this.setState(()=>{\r\n            return{\r\n                cartSubtotal:subtotal,\r\n                cartTax:tax,\r\n                cartTotal:total\r\n            }\r\n        })\r\n\r\n    }\r\n    //Seneme Potential methods\r\n    render() {\r\n        return(\r\n            <ProductContext.Provider value={{\r\n                ...this.state,\r\n                handleDetail:this.handleDetail,\r\n                addToCart:this.addToCart,\r\n                openModal:this.openModal,\r\n                closeModal:this.closeModal,\r\n                increment:this.increment,\r\n                decrement:this.decrement,\r\n                removeItem:this.removeItem,\r\n                clearCart:this.clearCart\r\n\r\n            }}>\r\n                {this.props.children}\r\n            </ProductContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\nexport {ProductProvider,ProductConsumer};\r\n\r\n"]},"metadata":{},"sourceType":"module"}